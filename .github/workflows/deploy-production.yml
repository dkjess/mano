name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      confirm_deployment:
        description: 'Type "deploy-production" to confirm'
        required: true
        type: string

jobs:
  validate-input:
    name: Validate Deployment
    runs-on: ubuntu-latest
    
    steps:
      - name: Validate confirmation
        run: |
          if [ "${{ github.event.inputs.confirm_deployment }}" != "deploy-production" ]; then
            echo "Invalid confirmation. Please type 'deploy-production' to confirm."
            exit 1
          fi
          
  deploy-supabase:
    name: Deploy Supabase to Production
    runs-on: ubuntu-latest
    needs: validate-input
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
          
      - name: Link to production project
        run: |
          supabase link --project-ref ${{ secrets.PRODUCTION_SUPABASE_PROJECT_ID }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Create backup
        run: |
          echo "Creating database backup..."
          # This is a placeholder - implement your backup strategy
          # supabase db dump -f "backup-$(date +%Y%m%d-%H%M%S).sql"
          
      - name: Deploy database migrations
        run: |
          supabase db push --include-all
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Deploy Edge Functions
        run: |
          # Deploy all edge functions with production config
          for func in supabase/functions/*/; do
            if [ -d "$func" ]; then
              func_name=$(basename "$func")
              echo "Deploying function: $func_name"
              supabase functions deploy "$func_name" --no-verify-jwt
            fi
          done
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
  verify-production:
    name: Verify Production
    runs-on: ubuntu-latest
    needs: deploy-supabase
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Health check
        run: |
          # Production health check
          curl -f https://${{ secrets.PRODUCTION_URL }}/api/health || exit 1
          
      - name: Notify deployment
        if: success()
        run: |
          echo "Production deployment completed successfully!"
          echo "Deployed by: ${{ github.actor }}"
          echo "Commit: ${{ github.sha }}"