name: Deploy to Staging

on:
  push:
    branches:
      - staging
  workflow_dispatch:

jobs:
  deploy-supabase:
    name: Deploy Supabase Functions
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
          
      - name: Link to staging project
        run: |
          supabase link --project-ref ${{ secrets.STAGING_SUPABASE_PROJECT_ID }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Deploy database migrations
        run: |
          supabase db push --include-all
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Deploy Edge Functions
        run: |
          # Deploy all edge functions
          for func in supabase/functions/*/; do
            if [ -d "$func" ]; then
              func_name=$(basename "$func")
              echo "Deploying function: $func_name"
              supabase functions deploy "$func_name" --no-verify-jwt
            fi
          done
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
  verify-deployment:
    name: Verify Deployment
    runs-on: ubuntu-latest
    needs: deploy-supabase
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Health check
        run: |
          # Basic health check against staging
          curl -f https://${{ secrets.STAGING_NETLIFY_URL }}/api/health || exit 1
          
      - name: Notify success
        if: success()
        run: echo "Staging deployment successful!"